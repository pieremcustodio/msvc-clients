openapi: "3.0.1"
info:
  title: API de Microservicio de Clientes
  description: API para la gestión de clientes y sus datos asociados
  version: "1.0.0"
  contact:
    name: Piere Custodio
    email: piere_07@hotmail.com
servers:
  - url: http://localhost:8081
    description: Servidor local
tags:
  - name: clients
    description: Operaciones relacionadas con la gestión de clientes
  - name: legalRepresentatives
    description: Operaciones relacionadas con los representantes legales
  - name: authorizedSignatories
    description: Operaciones relacionadas con los firmantes autorizados
paths:
  /api/clients:
    post:
      tags:
        - clients
      description: Crear cliente
      summary: Crear un nuevo cliente
      operationId: createClient
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientDto'
      responses:
        '201':
          description: Cliente creado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '409':
          $ref: '#/components/responses/AlreadyExists'

    put:
      tags:
        - clients
      summary: Actualizar un cliente existente
      description: Actualizar un cliente
      operationId: updateClient
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientDto'
      responses:
        '200':
          description: Cliente actualizado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
    get:
      tags:
        - clients
      description: Buscar todos los clientes
      summary: Buscar todos los clientes
      operationId: findAllClients
      responses:
        '200':
          description: Listado de clientes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BankResponse'
    delete:
      tags:
        - clients
      description: Eliminar un cliente existente
      summary: Eliminar cliente
      operationId: deleteClient
      parameters:
        - name: id
          in: path
          description: ID del cliente
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Cliente eliminado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'

  /api/clients/{id}:
    get:
      tags:
        - clients
      description: Buscar cliente por ID
      summary: Buscar cliente por ID
      operationId: findById
      parameters:
        - name: id
          in: path
          description: ID del cliente a retornar
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Obtener cliente por ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankResponse'
        '404':
          $ref: '#/components/responses/NotFound'
  /api/clients/findAllByIdList:
    post:
      tags:
        - clients
      description: Busqueda de clientes por lista de IDs
      summary: Busqueda de clientes por lista de IDs
      operationId: findAllByIdList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: A list of clients
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BankResponse'
        '404':
          $ref: '#/components/responses/NotFound'
  /api/clients/findByDocumentNumber/{documentNumber}:
    get:
      tags:
        - clients
      description: Búsqueda de cliente por número de documento
      summary: Búsqueda de cliente por número de documento
      operationId: findByDocumentNumber
      parameters:
        - name: documentNumber
          in: path
          description: Número de documento del cliente a buscar
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Obtener cliente por número de documento
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankResponse'
        '404':
          $ref: '#/components/responses/NotFound'
  /api/legal-representatives:
    post:
      tags:
        - legalRepresentatives
      description: Crear un nuevo representante legal
      summary: Crear representante legal
      operationId: createLegalRepresentative
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LegalRepresentativeDto'
      responses:
        '201':
          description: Representante legal creado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '409':
          $ref: '#/components/responses/AlreadyExists'
    put:
      tags:
        - legalRepresentatives
      description: Actualizar un representante legal existente
      summary: Actualizar representante legal
      operationId: updateLegalRepresentative
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LegalRepresentativeDto'
      responses:
        '200':
          description: Representante legal actualizado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
    get:
      tags:
        - legalRepresentatives
      description: Buscar todos los representantes legales
      summary: Buscar representantes legales
      operationId: findAllLegalRepresentatives
      responses:
        '200':
          description: Lista de representantes legales
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankResponse'
    delete:
      tags:
        - legalRepresentatives
      description: Eliminar un representante legal existente
      summary: Eliminar representante legal
      operationId: deleteLegalRepresentative
      parameters:
        - name: id
          in: path
          description: ID del representante legal a eliminar
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Representante legal eliminado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
  /api/authorized-signatories:
    post:
      tags:
        - authorizedSignatories
      description: Crear un nuevo firmante autorizado
      summary: Crear firmante autorizado
      operationId: createAuthorizedSignatory
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizedSignatoryDto'
      responses:
        '201':
          description: Firmante autorizado creado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '409':
          $ref: '#/components/responses/AlreadyExists'
    put:
      tags:
        - authorizedSignatories
      description: Actualizar un firmante autorizado existente
      summary: Actualizar firmante autorizado
      operationId: updateAuthorizedSignatory
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizedSignatoryDto'
      responses:
        '200':
          description: Firmante autorizado actualizado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
    get:
      tags:
        - authorizedSignatories
      description: Buscar todos los firmantes autorizados
      summary: Buscar firmantes autorizados
      operationId: findAllAuthorizedSignatories
      responses:
        '200':
          description: Lista de firmantes autorizados
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankResponse'
    delete:
      tags:
        - authorizedSignatories
      description: Eliminar un firmante autorizado existente
      summary: Eliminar firmante autorizado
      operationId: deleteAuthorizedSignatory
      parameters:
        - name: id
          in: path
          description: ID del firmante autorizado a eliminar
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Firmante autorizado eliminado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'

components:
  responses:
    NotFound:
      description: Recurso no encontrado
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BankResponse'
          example:
            success: false
            code: "404"
            message: "Recurso no encontrado"
            type: "E"
            dateTime: "2025-01-12T10:00:00Z"

    AlreadyExists:
      description: Recurso ya existente
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BankResponse'
          example:
            success: false
            code: "409"
            message: "El recurso ya existe"
            type: "E"
            dateTime: "2025-01-12T10:00:00Z"

    BadRequest:
      description: Solicitud mal formada
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BankResponse'
          example:
            success: false
            code: "400"
            message: "Solicitud mal formada"
            type: "E"
            dateTime: "2025-01-12T10:00:00Z"

  schemas:
    LegalRepresentativeDto:
      type: object
      properties:
        id:
          type: string
          description: ID del representante legal
        name:
          type: string
          description: Nombre del representante legal
        lastName:
          type: string
          description: Apellido del representante legal
        email:
          type: string
          description: Correo electrónico del representante legal
          format: email
        address:
          type: string
          description: Dirección del representante legal
        cellphone:
          type: string
          description: Número de celular del representante legal
        phone:
          type: string
          description: Número de teléfono del representante legal
        documentType:
          type: string
          description: Tipo de documento del representante legal
          enum:
            - DNI
            - CE
            - RUC
            - PASSPORT
        documentNumber:
          type: string
          description: Número de documento del representante legal
        birthDate:
          type: string
          description: Fecha de nacimiento del representante legal
          format: date
          pattern: '^\\d{4}-\\d{2}-\\d{2}$'
        status:
          type: boolean
          description: Estado del representante legal

    AuthorizedSignatoryDto:
      type: object
      properties:
        id:
          type: string
          description: ID del firmante autorizado
        name:
          type: string
          description: Nombre del firmante autorizado
        lastName:
          type: string
          description: Apellido del firmante autorizado
        email:
          type: string
          description: Correo electrónico del firmante autorizado
          format: email
        address:
          type: string
          description: Dirección del firmante autorizado
        cellphone:
          type: string
          description: Número de celular del firmante autorizado
        phone:
          type: string
          description: Número de teléfono del firmante autorizado
        documentType:
          type: string
          description: Tipo de documento del firmante autorizado
          enum:
            - DNI
            - CE
            - RUC
            - PASSPORT
        documentNumber:
          type: string
          description: Número de documento del firmante autorizado
        status:
          type: boolean
          description: Estado del firmante autorizado

    ClientDto:
      type: object
      properties:
        id:
          type: string
          description: ID del cliente
        clientType:
          type: string
          description: Tipo de cliente
          enum:
            - PERSONAL
            - EMPRESARIAL
        profileType:
          type: string
          description: Tipo de perfil del cliente
          enum:
            - NORMAL
            - PYME
            - VIP
        legalRepresentatives:
          type: array
          description: Lista de representantes legales asociados al cliente
          items:
            $ref: '#/components/schemas/LegalRepresentativeDto'
        authorizedSignatories:
          type: array
          description: Lista de firmantes autorizados asociados al cliente
          items:
            $ref: '#/components/schemas/AuthorizedSignatoryDto'
        createAt:
          type: string
          description: Fecha de creación del cliente
          format: date
          pattern: '^\\d{4}-\\d{2}-\\d{2}$'
        endAt:
          type: string
          description: Fecha de finalización del cliente
          format: date
          pattern: '^\\d{4}-\\d{2}-\\d{2}$'
        status:
          type: boolean
          description: Estado del cliente
    BankResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Indica si la operación fue exitosa
        code:
          type: string
          description: Código de respuesta (ej. 200, 400, 500)
        message:
          type: string
          description: Descripción del resultado o error
        type:
          type: string
          description: Tipo de excepción
          enum:
            - Advertencia
            - Error
        data:
          type: object
          description: Datos retornados en caso de éxito
        dateTime:
          type: string
          description: Fecha y hora de la respuesta
          format: date-time
